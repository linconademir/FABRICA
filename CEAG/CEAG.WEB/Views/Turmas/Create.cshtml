@model CEAG.WEB.ViewModel.Turma.TurmaViewModel

@{
    ViewBag.Title = "Cadastro de Turma";
}

<div class="containerLopus">
    <div>
        <img src="" />
        <h3><img alt="Brand" height="100" width="100" src="~/Images/Browser/classroomBig.png" /> INCLUSÃO DE UMA NOVA TURMA</h3>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.CodEscola)

        <div class="form-horizontal">
            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <fieldset>
                <legend>DADOS DA TURMA</legend>

                <div class="form-group">
                    @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.Nivel, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(model => model.Nivel, (SelectList)ViewBag.DropdownNivel, new { @class = "form-control", data_live_search = "true", id = "ddlNivel" })
                        @Html.ValidationMessageFor(model => model.Nivel, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Segmento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(model => model.Segmento, new SelectList(string.Empty, "Value", "Text"), "SELECIONE O NÍVEL", new { @class = "form-control", data_live_search = "true", id = "ddlSegmento" })
                        @Html.ValidationMessageFor(model => model.Segmento, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Portaria, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Portaria, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Portaria, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Periodo, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(model => model.Periodo, (SelectList)ViewBag.DropdownPeriodo, new { @class = "form-control", data_live_search = "true", id = "ddlPeriodo" })
                        @Html.ValidationMessageFor(model => model.Periodo, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.CodHorario, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(model => model.CodHorario, (SelectList)ViewBag.DropdownHorario, null, new { @class = "form-control", data_live_search = "true", id = "ddlHorario" })
                        @Html.ValidationMessageFor(model => model.CodHorario, "", new { @class = "text-danger" })
                    </div>


                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AnoLetivo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(model => model.AnoLetivo, (SelectList)ViewBag.DropdownAnoLetivo, new { @class = "form-control", data_live_search = "true", id = "ddlAnoLetivo" })
                        @Html.ValidationMessageFor(model => model.AnoLetivo, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Vagas, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Vagas, new { htmlAttributes = new { @class = "form-control", id = "numero3Digitos" } })
                        @Html.ValidationMessageFor(model => model.Vagas, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.DescontoMensalidade, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.DescontoMensalidade, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DescontoMensalidade, "", new { @class = "text-danger" })
                    </div>

                </div>
            </fieldset>

            <div class="form-group">
                <div class="col-md-offset-5 col-si-offset-5 col-md-10">
                    <button type="submit">
                        <img src="~/images/Browser/ok.png" width="50" height="50" data-toggle="modal" data-target="#modal-mensagem" />
                    </button>
                    <button type="button" onclick="location.href='@Url.Action("Index", "Turmas")'">
                        <img src="~/images/Browser/cancel.png" data-toggle="modal" data-target="#modal-mensagem" width="50" height="50" />
                    </button>
                </div>
            </div>

        </div>
    }

</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/validations_pt-br")

    @*<script src="../../Scripts/jquery-3.3.1.js" type="text/javascript"></script>
        <script src="../../Scripts/jquery-3.3.1.min.js" type="text/javascript"></script>*@
    <script type="text/javascript">

    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#ddlNivel").change(function () {
            $("#ddlSegmento").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ListarSegmento","Turmas")', // we are calling json method

                dataType: 'json',

                data: { nivel: $("#ddlNivel").val() },
               // here we are get value of selected country and passing same value as inputto json method GetStates.

                success: function (listaNivel) {
                    // states contains the JSON formatted list
                    // of states passed from the controller

                    $.each(listaNivel, function (i, lista) {
                        $("#ddlSegmento").append('<option value="' + lista.Value + '">' +
                            lista.Text + '</option>');
                    // here we are adding option for States

                    });
                },
                error: function (ex) {
                    alert('Ocorreu falha no carregamneto dos segmentos.' + ex.error);
                }
            });
            return false;
        })
    });
    </script>
}